/**
* @vue/shared v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const Ie={},Ce=()=>{},Oe=Object.assign,Se=Array.isArray,j=e=>typeof e=="function",Me=e=>typeof e=="string",Ne=e=>typeof e=="symbol";let X;const L=()=>X||(X=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});/**
* @vue/reactivity v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(Ne));function P(e){const t=e&&e.__v_raw;return t?P(t):e}function Te(e){return e?e.__v_isRef===!0:!1}/**
* @vue/runtime-core v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const v=[];function bt(e){v.push(e)}function xt(){v.pop()}let W=!1;function kt(e,...t){if(W)return;W=!0;const n=v.length?v[v.length-1].component:null,o=n&&n.appContext.config.warnHandler,s=Fe();if(o)A(o,n,11,[e+t.map(r=>{var i,c;return(c=(i=r.toString)==null?void 0:i.call(r))!=null?c:JSON.stringify(r)}).join(""),n&&n.proxy,s.map(({vnode:r})=>`at <${re(n,r.type)}>`).join(`
`),s]);else{const r=[`[Vue warn]: ${e}`,...t];s.length&&r.push(`
`,...$e(s)),console.warn(...r)}W=!1}function Fe(){let e=v[v.length-1];if(!e)return[];const t=[];for(;e;){const n=t[0];n&&n.vnode===e?n.recurseCount++:t.push({vnode:e,recurseCount:0});const o=e.component&&e.component.parent;e=o&&o.vnode}return t}function $e(e){const t=[];return e.forEach((n,o)=>{t.push(...o===0?[]:[`
`],...Ve(n))}),t}function Ve({vnode:e,recurseCount:t}){const n=t>0?`... (${t} recursive calls)`:"",o=e.component?e.component.parent==null:!1,s=` at <${re(e.component,e.type,o)}`,r=">"+n;return e.props?[s,...Re(e.props),r]:[s+r]}function Re(e){const t=[],n=Object.keys(e);return n.slice(0,3).forEach(o=>{t.push(...Z(o,e[o]))}),n.length>3&&t.push(" ..."),t}function Z(e,t,n){return Me(t)?(t=JSON.stringify(t),n?t:[`${e}=${t}`]):typeof t=="number"||typeof t=="boolean"||t==null?n?t:[`${e}=${t}`]:Te(t)?(t=Z(e,P(t.value),!0),n?t:[`${e}=Ref<`,t,">"]):j(t)?[`${e}=fn${t.name?`<${t.name}>`:""}`]:(t=P(t),n?t:[`${e}=`,t])}const Et={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",0:"setup function",1:"render function",2:"watcher getter",3:"watcher callback",4:"watcher cleanup function",5:"native event handler",6:"component event handler",7:"vnode hook",8:"directive hook",9:"transition hook",10:"app errorHandler",11:"app warnHandler",12:"ref function",13:"async component loader",14:"scheduler flush",15:"component update",16:"app unmount cleanup function"};function A(e,t,n,o){try{return o?e(...o):e()}catch(s){ee(s,t,n)}}function ee(e,t,n,o=!0){const s=t?t.vnode:null,{errorHandler:r,throwUnhandledErrorInProduction:i}=t&&t.appContext.config||Ie;if(t){let c=t.parent;const a=t.proxy,l=`https://vuejs.org/error-reference/#runtime-${n}`;for(;c;){const u=c.ec;if(u){for(let h=0;h<u.length;h++)if(u[h](e,a,l)===!1)return}c=c.parent}if(r){A(r,null,10,[e,a,l]);return}}De(e,n,s,o,i)}function De(e,t,n,o=!0,s=!1){if(s)throw e;console.error(e)}const b=[];let x=-1;const I=[];let k=null,C=0;const je=Promise.resolve();let q=null;const Le=100;function Pe(e){let t=x+1,n=b.length;for(;t<n;){const o=t+n>>>1,s=b[o],r=M(s);r<e||r===e&&s.flags&2?t=o+1:n=o}return t}function We(e){if(!(e.flags&1)){const t=M(e),n=b[b.length-1];!n||!(e.flags&2)&&t>=M(n)?b.push(e):b.splice(Pe(t),0,e),e.flags|=1,te()}}function te(){q||(q=je.then(ne))}function Ae(e){Se(e)?I.push(...e):k&&e.id===-1?k.splice(C+1,0,e):e.flags&1||(I.push(e),e.flags|=1),te()}function qe(e){if(I.length){const t=[...new Set(I)].sort((n,o)=>M(n)-M(o));if(I.length=0,k){k.push(...t);return}for(k=t,C=0;C<k.length;C++){const n=k[C];n.flags&4&&(n.flags&=-2),n.flags&8||n(),n.flags&=-2}k=null,C=0}}const M=e=>e.id==null?e.flags&2?-1:1/0:e.id;function ne(e){const t=Ce;try{for(x=0;x<b.length;x++){const n=b[x];n&&!(n.flags&8)&&(n.flags&4&&(n.flags&=-2),A(n,n.i,n.i?15:14),n.flags&4||(n.flags&=-2))}}finally{for(;x<b.length;x++){const n=b[x];n&&(n.flags&=-2)}x=-1,b.length=0,qe(e),q=null,(b.length||I.length)&&ne(e)}}function vt(e,t){const n=e.get(t)||0;if(n>Le){const o=t.i,s=o&&se(o.type);return ee(`Maximum recursive updates exceeded${s?` in component <${s}>`:""}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`,null,10),!0}return e.set(t,n+1),!1}const H=new Map,T=new Map;function zt(e,t){return T.has(e)?!1:(T.set(e,{initialDef:F(t),instances:new Set}),!0)}function F(e){return Je(e)?e.__vccOpts:e}function It(e,t){const n=T.get(e);n&&(n.initialDef.render=t,[...n.instances].forEach(o=>{t&&(o.render=t,F(o.type).render=t),o.renderCache=[],o.update()}))}function Ct(e,t){const n=T.get(e);if(!n)return;t=F(t),oe(n.initialDef,t);const o=[...n.instances];for(let s=0;s<o.length;s++){const r=o[s],i=F(r.type);let c=H.get(i);c||(i!==n.initialDef&&oe(i,t),H.set(i,c=new Set)),c.add(r),r.appContext.propsCache.delete(r.type),r.appContext.emitsCache.delete(r.type),r.appContext.optionsCache.delete(r.type),r.ceReload?(c.add(r),r.ceReload(t.styles),c.delete(r)):r.parent?We(()=>{r.parent.update(),c.delete(r)}):r.appContext.reload?r.appContext.reload():typeof window<"u"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required."),r.root.ce&&r!==r.root&&r.root.ce._removeChildStyle(i)}Ae(()=>{H.clear()})}function oe(e,t){Oe(e,t);for(const n in e)n!=="__file"&&!(n in t)&&delete e[n]}function Ot(e){return(t,n)=>{try{return e(t,n)}catch(o){console.error(o),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}L().requestIdleCallback,L().cancelIdleCallback;const St={};{const e=L(),t=(n,o)=>{let s;return(s=e[n])||(s=e[n]=[]),s.push(o),r=>{s.length>1?s.forEach(i=>i(r)):s[0](r)}};t("__VUE_INSTANCE_SETTERS__",n=>n),t("__VUE_SSR_SETTERS__",n=>n)}const He=/(?:^|[-_])(\w)/g,Ue=e=>e.replace(He,t=>t.toUpperCase()).replace(/[-_]/g,"");function se(e,t=!0){return j(e)?e.displayName||e.name:e.name||t&&e.__name}function re(e,t,n=!1){let o=se(t);if(!o&&t.__file){const s=t.__file.match(/([^/\\]+)\.\w+$/);s&&(o=s[1])}if(!o&&e&&e.parent){const s=r=>{for(const i in r)if(r[i]===t)return i};o=s(e.components||e.parent.type.components)||s(e.appContext.components)}return o?Ue(o):n?"App":"Anonymous"}function Je(e){return j(e)&&"__vccOpts"in e}[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:ie}=Object,{fromEntries:Ge}=Object,Be="ENTRIES",ce="KEYS",le="VALUES",_="";class U{set;_type;_path;constructor(t,n){const o=t._tree,s=Array.from(o.keys());this.set=t,this._type=n,this._path=s.length>0?[{node:o,keys:s}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:n}=O(this._path);if(O(n)===_)return{done:!1,value:this.result()};const o=t.get(O(n));return this._path.push({node:o,keys:Array.from(o.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=O(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>O(t)).filter(t=>t!==_).join("")}value(){return O(this._path).node.get(_)}result(){switch(this._type){case le:return this.value();case ce:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const O=e=>e[e.length-1],Ke=(e,t,n)=>{const o=new Map;if(typeof t!="string")return o;const s=t.length+1,r=s+n,i=new Uint8Array(r*s).fill(n+1);for(let c=0;c<s;++c)i[c]=c;for(let c=1;c<r;++c)i[c*s]=c;return ue(e,t,n,o,i,1,s,""),o},ue=(e,t,n,o,s,r,i,c)=>{const a=r*i;e:for(const l of e.keys())if(l===_){const u=s[a-1];u<=n&&o.set(c,[e.get(l),u])}else{let u=r;for(let h=0;h<l.length;++h,++u){const p=l[h],g=i*u,y=g-i;let f=s[g];const d=Math.max(0,u-n-1),w=Math.min(i-1,u+n);for(let m=d;m<w;++m){const R=p!==t[m],D=s[y+m]+ +R,N=s[y+m+1]+1,E=s[g+m]+1,S=s[g+m+1]=Math.min(D,N,E);S<f&&(f=S)}if(f>n)continue e}ue(e.get(l),t,n,o,s,u,i,c+l)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,n=""){this._tree=t,this._prefix=n}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[n,o]=$(this._tree,t.slice(this._prefix.length));if(n===void 0){const[s,r]=B(o);for(const i of s.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),s.get(i)),new z(c,t)}}return new z(n,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,Ye(this._tree,t)}entries(){return new U(this,Be)}forEach(t){for(const[n,o]of this)t(n,o,this)}fuzzyGet(t,n){return Ke(this._tree,t,n)}get(t){const n=J(this._tree,t);return n!==void 0?n.get(_):void 0}has(t){return J(this._tree,t)?.has(_)??!1}keys(){return new U(this,ce)}set(t,n){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,G(this._tree,t).set(_,n),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,n){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const o=G(this._tree,t);return o.set(_,n(o.get(_))),this}fetch(t,n){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const o=G(this._tree,t);let s=o.get(_);return s===void 0&&o.set(_,s=n()),s}values(){return new U(this,le)}[Symbol.iterator](){return this.entries()}static from(t){const n=new z;for(const[o,s]of t)n.set(o,s);return n}static fromObject(t){return z.from(Object.entries(t))}}const $=(e,t,n=[])=>{if(t.length===0||e==null)return[e,n];for(const o of e.keys())if(o!==_&&t.startsWith(o))return n.push([e,o]),$(e.get(o),t.slice(o.length),n);return n.push([e,t]),$(void 0,"",n)},J=(e,t)=>{if(t.length===0||!e)return e;for(const n of e.keys())if(n!==_&&t.startsWith(n))return J(e.get(n),t.slice(n.length))},G=(e,t)=>{const n=t.length;e:for(let o=0;e&&o<n;){for(const r of e.keys())if(r!==_&&t[o]===r[0]){const i=Math.min(n-o,r.length);let c=1;for(;c<i&&t[o+c]===r[c];)++c;const a=e.get(r);if(c===r.length)e=a;else{const l=new Map;l.set(r.slice(c),a),e.set(t.slice(o,o+c),l),e.delete(r),e=l}o+=c;continue e}const s=new Map;return e.set(t.slice(o),s),s}return e},Ye=(e,t)=>{const[n,o]=$(e,t);if(n!==void 0){if(n.delete(_),n.size===0)ae(o);else if(n.size===1){const[s,r]=n.entries().next().value;fe(o,s,r)}}},ae=e=>{if(e.length===0)return;const[t,n]=B(e);if(t.delete(n),t.size===0)ae(e.slice(0,-1));else if(t.size===1){const[o,s]=t.entries().next().value;o!==_&&fe(e.slice(0,-1),o,s)}},fe=(e,t,n)=>{if(e.length===0)return;const[o,s]=B(e);o.set(s+t,n),o.delete(s)},B=e=>e[e.length-1],Qe=(e,t)=>{const n=e._idToShortId.get(t);if(n!=null)return e._storedFields.get(n)},Xe=/[\n\r\p{Z}\p{P}]+/u,K="or",de="and",Ze="and_not",et=(e,t)=>{e.includes(t)||e.push(t)},he=(e,t)=>{for(const n of t)e.includes(n)||e.push(n)},pe=({score:e},{score:t})=>t-e,tt=()=>new Map,V=e=>{const t=new Map;for(const n of Object.keys(e))t.set(parseInt(n,10),e[n]);return t},ge=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,me={[K]:(e,t)=>{for(const n of t.keys()){const o=e.get(n);if(o==null)e.set(n,t.get(n));else{const{score:s,terms:r,match:i}=t.get(n);o.score=o.score+s,o.match=Object.assign(o.match,i),he(o.terms,r)}}return e},[de]:(e,t)=>{const n=new Map;for(const o of t.keys()){const s=e.get(o);if(s==null)continue;const{score:r,terms:i,match:c}=t.get(o);he(s.terms,i),n.set(o,{score:s.score+r,terms:s.terms,match:Object.assign(s.match,c)})}return n},[Ze]:(e,t)=>{for(const n of t.keys())e.delete(n);return e}},nt=(e,t,n,o,s,r)=>{const{k:i,b:c,d:a}=r;return Math.log(1+(n-t+.5)/(t+.5))*(a+e*(i+1)/(e+i*(1-c+c*o/s)))},ot=e=>(t,n,o)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,n,o):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,n,o):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,n,o):1}),_e=(e,t,n,o)=>{for(const s of Object.keys(e._fieldIds))if(e._fieldIds[s]===n){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${o}" was not present in field "${s}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},st=(e,t,n,o)=>{if(!e._index.has(o)){_e(e,n,t,o);return}const s=e._index.fetch(o,tt),r=s.get(t),i=r?.get(n);!r||typeof i>"u"?_e(e,n,t,o):i<=1?r.size<=1?s.delete(t):r.delete(n):r.set(n,i-1),e._index.get(o).size===0&&e._index.delete(o)},rt={k:1.2,b:.7,d:.5},it={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(Xe),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},ye={combineWith:K,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:rt},ct={combineWith:de,prefix:(e,t,n)=>t===n.length-1},lt={batchSize:1e3,batchWait:10},we={minDirtFactor:.1,minDirtCount:20},ut={...lt,...we},be=Symbol("*"),at=(e,t)=>{const n=new Map,o={...e._options.searchOptions,...t};for(const[s,r]of e._documentIds){const i=o.boostDocument?o.boostDocument(r,"",e._storedFields.get(s)):1;n.set(s,{score:i,terms:[],match:{}})}return n},xe=(e,t=K)=>{if(e.length===0)return new Map;const n=t.toLowerCase();if(!(n in me))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(me[n])},Y=(e,t,n,o,s,r,i,c,a,l=new Map)=>{if(r==null)return l;for(const u of Object.keys(i)){const h=i[u],p=e._fieldIds[u],g=r.get(p);if(g==null)continue;let y=g.size;const f=e._avgFieldLength[p];for(const d of g.keys()){if(!e._documentIds.has(d)){st(e,p,d,n),y-=1;continue}const w=c?c(e._documentIds.get(d),n,e._storedFields.get(d)):1;if(!w)continue;const m=g.get(d),R=e._fieldLength.get(d)[p],D=nt(m,y,e._documentCount,R,f,a),N=o*s*h*w*D,E=l.get(d);if(E){E.score+=N,et(E.terms,t);const S=ge(E.match,n);S?S.push(u):E.match[n]=[u]}else l.set(d,{score:N,terms:[t],match:{[n]:[u]}})}}return l},ft=(e,t,n)=>{const o={...e._options.searchOptions,...n},s=(o.fields??e._options.fields).reduce((f,d)=>({...f,[d]:ge(o.boost,d)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:a}=o,{fuzzy:l,prefix:u}={...ye.weights,...i},h=e._index.get(t.term),p=Y(e,t.term,t.term,1,t.termBoost,h,s,r,a);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const f=t.fuzzy===!0?.2:t.fuzzy,d=f<1?Math.min(c,Math.round(t.term.length*f)):f;d&&(y=e._index.fuzzyGet(t.term,d))}if(g)for(const[f,d]of g){const w=f.length-t.term.length;if(!w)continue;y?.delete(f);const m=u*f.length/(f.length+.3*w);Y(e,t.term,f,m,t.termBoost,d,s,r,a,p)}if(y)for(const f of y.keys()){const[d,w]=y.get(f);if(!w)continue;const m=l*f.length/(f.length+w);Y(e,t.term,f,m,t.termBoost,d,s,r,a,p)}return p},ke=(e,t,n={})=>{if(t===be)return at(e,n);if(typeof t!="string"){const u={...n,...t,queries:void 0},h=t.queries.map(p=>ke(e,p,u));return xe(h,u.combineWith)}const{tokenize:o,processTerm:s,searchOptions:r}=e._options,i={tokenize:o,processTerm:s,...r,...n},{tokenize:c,processTerm:a}=i,l=c(t).flatMap(u=>a(u)).filter(u=>!!u).map(ot(i)).map(u=>ft(e,u,i));return xe(l,i.combineWith)},Ee=(e,t,n={})=>{const{searchOptions:o}=e._options,s={...o,...n},r=ke(e,t,n),i=[];for(const[c,{score:a,terms:l,match:u}]of r){const h=l.length||1,p={id:e._documentIds.get(c),score:a*h,terms:Object.keys(u),queryTerms:l,match:u};Object.assign(p,e._storedFields.get(c)),(s.filter==null||s.filter(p))&&i.push(p)}return t===be&&s.boostDocument==null||i.sort(pe),i},dt=(e,t,n={})=>{n={...e._options.autoSuggestOptions,...n};const o=new Map;for(const{score:r,terms:i}of Ee(e,t,n)){const c=i.join(" "),a=o.get(c);a!=null?(a.score+=r,a.count+=1):o.set(c,{score:r,terms:i,count:1})}const s=[];for(const[r,{score:i,terms:c,count:a}]of o)s.push({suggestion:r,terms:c,score:i/a});return s.sort(pe),s};class ht{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const n=t.autoVacuum==null||t.autoVacuum===!0?ut:t.autoVacuum;this._options={...it,...t,autoVacuum:n,searchOptions:{...ye,...t.searchOptions},autoSuggestOptions:{...ct,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=we,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[n,o]of this._index){const s={};for(const[r,i]of o)s[r]=Object.fromEntries(i);t.push([n,s])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let n=0;n<t.length;n++)this._fieldIds[t[n]]=n}}const pt=e=>new ht(e),gt=({documentCount:e,nextId:t,fieldIds:n,averageFieldLength:o,dirtCount:s,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=pt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=n,c._avgFieldLength=o,c._dirtCount=s??0,c._index=new z,c},mt=(e,t)=>{const{index:n,documentIds:o,fieldLength:s,storedFields:r}=e,i=gt(e,t);i._documentIds=V(o),i._fieldLength=V(s),i._storedFields=V(r);for(const[c,a]of i._documentIds)i._idToShortId.set(a,c);for(const[c,a]of n){const l=new Map;for(const u of Object.keys(a))l.set(parseInt(u,10),V(a[u]));i._index.set(c,l)}return i},Q=(e,t)=>{const n=e.toLowerCase(),o=t.toLowerCase(),s=[];let r=0,i=0;const c=(l,u=!1)=>{let h;i===0?h=l.length>20?`… ${l.slice(-20)}`:l:u?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&s.push(h),i+=h.length,u||(s.push(["mark",t]),i+=t.length,i>=100&&s.push(" …"))};let a=n.indexOf(o,r);if(a===-1)return null;for(;a>=0;){const l=a+o.length;if(c(e.slice(r,a)),r=l,i>100)break;a=n.indexOf(o,r)}return i<100&&c(e.slice(r),!0),s},_t=(e,t)=>t.contents.reduce((n,[,o])=>n+o,0)-e.contents.reduce((n,[,o])=>n+o,0),yt=(e,t)=>Math.max(...t.contents.map(([,n])=>n))-Math.max(...e.contents.map(([,n])=>n)),ve=(e,t,n={})=>{const o={};return Ee(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...n}).forEach(s=>{const{id:r,terms:i,score:c}=s,a=r.includes("@"),l=r.includes("#"),[u,h]=r.split(/[#@]/),p=Number(u),g=i.sort((f,d)=>f.length-d.length).filter((f,d)=>i.slice(d+1).every(w=>!w.includes(f))),{contents:y}=o[p]??={title:"",contents:[]};if(a)y.push([{type:"customField",id:p,index:h,display:g.map(f=>s.c.map(d=>Q(d,f))).flat().filter(f=>f!==null)},c]);else{const f=g.map(d=>Q(s.h,d)).filter(d=>d!==null);if(f.length&&y.push([{type:l?"heading":"title",id:p,...l&&{anchor:h},display:f},c]),"t"in s&&s.t)for(const d of s.t){const w=g.map(m=>Q(d,m)).filter(m=>m!==null);w.length&&y.push([{type:"text",id:p,...l&&{anchor:h},display:w},c])}}}),ie(o).sort(([,s],[,r])=>"max"==="total"?_t(s,r):yt(s,r)).map(([s,{title:r,contents:i}])=>{if(!r){const c=Qe(t,s);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},ze=(e,t,n={})=>{const o=dt(t,e,{fuzzy:.2,maxFuzzy:3,...n}).map(({suggestion:s})=>s);return e.includes(" ")?o:o.filter(s=>!s.includes(" "))},wt=Ge(ie(JSON.parse("{\"/\":{\"documentCount\":54,\"nextId\":54,\"documentIds\":{\"0\":\"2\",\"1\":\"2#linux目录\",\"2\":\"2#根目录\",\"3\":\"2#bin-执行文件目录\",\"4\":\"2#boot-开机文件目录\",\"5\":\"2#dev-驱动设备目录\",\"6\":\"2#etc-配置文件目录\",\"7\":\"2#home-用户主文件夹\",\"8\":\"2#lib-系统函数库\",\"9\":\"2#media-媒体设备暂挂区\",\"10\":\"2#mnt-额外设备暂挂区\",\"11\":\"2#opt-第三方软件安装目录\",\"12\":\"2#root-管理员主文件夹\",\"13\":\"2#sbin-重要系统执行文件\",\"14\":\"2#srv-服务数据存放目录\",\"15\":\"2#tmp-临时文件存放目录\",\"16\":\"2#lost-found\",\"17\":\"2#proc-虚拟文件系统目录\",\"18\":\"2#sys-虚拟文件系统目录\",\"19\":\"2#usr-系统软件资源目录\",\"20\":\"2#var-常态可变动文件目录\",\"21\":\"2#linux系统管理程序\",\"22\":\"2#linux环境配置\",\"23\":\"2#网卡配置\",\"24\":\"2#yum环境配置\",\"25\":\"2#基础软件工具安装\",\"26\":\"2#配置ssh登录\",\"27\":\"2#linux命令\",\"28\":\"2#网络管理\",\"29\":\"2#shell脚本\",\"30\":\"2#shell脚本的解释器\",\"31\":\"2#脚本结构\",\"32\":\"2#shell的预定义变量\",\"33\":\"2#文件测试\",\"34\":\"2#逻辑测试\",\"35\":\"2#整数值比较\",\"36\":\"2#字符串比较\",\"37\":\"2#if\",\"38\":\"2#for\",\"39\":\"2#while\",\"40\":\"2#case\",\"41\":\"2#计划任务服务\",\"42\":\"3\",\"43\":\"4\",\"44\":\"4#git的基本使用\",\"45\":\"4#git的工作流\",\"46\":\"4#git的钩子\",\"47\":\"4#搭建gitlab\",\"48\":\"4#github和gitee\",\"49\":\"5\",\"50\":\"6\",\"51\":\"7\",\"52\":\"8\",\"53\":\"9\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1],\"2\":[2,15],\"3\":[3,21],\"4\":[3,5],\"5\":[3,12],\"6\":[3,15],\"7\":[3,8],\"8\":[3,13],\"9\":[3,14],\"10\":[3,10],\"11\":[3,5],\"12\":[3,7],\"13\":[3,17],\"14\":[3,14],\"15\":[3,9],\"16\":[2,8],\"17\":[3,10],\"18\":[3,8],\"19\":[3,18],\"20\":[3,18],\"21\":[1,5],\"22\":[1],\"23\":[1,69],\"24\":[1,22],\"25\":[1,13],\"26\":[1,12],\"27\":[1],\"28\":[1],\"29\":[1,2],\"30\":[1,15],\"31\":[1,7],\"32\":[1],\"33\":[1,9],\"34\":[1,6],\"35\":[1,3],\"36\":[1,3],\"37\":[1,32],\"38\":[1,41],\"39\":[1,9],\"40\":[1,13],\"41\":[1,3],\"42\":[1],\"43\":[1,4],\"44\":[1,293],\"45\":[1,19],\"46\":[1],\"47\":[1],\"48\":[1,12],\"49\":[1],\"50\":[1,3],\"51\":[1],\"52\":[1],\"53\":[1]},\"averageFieldLength\":[1.6666666666666667,18.457846354552863],\"storedFields\":{\"0\":{\"h\":\"外核\"},\"1\":{\"h\":\"Linux目录\"},\"2\":{\"h\":\"/ 根目录\",\"t\":[\"根目录是整个系统最重要的一个目录，因为不但所有的目录都是由根目录衍生出来的， 同时根目录也与开机、还原、系统修复等操作有关。 因此 FHS 标准建议：根目录（/）所在分区应该越小越好， 且应用程序所安装的软件最好不要与根目录放在同一个分区内， 保持根目录越小越好。如此不但性能较好，根目录所在的文件系统也比较不容易发生问题。\"]},\"3\":{\"h\":\"/bin (执行文件目录)\",\"t\":[\"系统有很多放置执行文件的目录，但 /bin 比较特殊。 因为 /bin 放置的是在单用户维护模式下还能被操作的命令。 在 /bin 下面的命令可以被 root 与一般账号所使用， 主要有 cat，chmod，chown，date，mv，mkdir，cp，bash 等常用的命令。\"]},\"4\":{\"h\":\"/boot（开机文件目录）\",\"t\":[\"这个目录主要放置开机会使用到的文件，包括 Linux 内核文件以及开机菜单与开机所需配置文件等。\"]},\"5\":{\"h\":\"/dev（驱动设备目录）\",\"t\":[\"在 Linux 系统上，任何设备与接口设备都是以文件的形式存在于这个目录当中的。 你只要通过访问这个目录下面的某个文件，就等于访问某个设备。 比较重要的文件有 /dev/null，/dev/zero，/dev/tty 等\"]},\"6\":{\"h\":\"/etc（配置文件目录）\",\"t\":[\"系统主要的配置文件几乎都放置在这个目录内，例如人员的账号密码文件、各种服务的起始文件等。 一般来说，这个目录下的各个文件属性是可以让一般用户查阅的，但只有 root 有权利修改。 比较重要的文件有 /etc/init.d，/etc/inittab，/etc/sysconfig 等\"]},\"7\":{\"h\":\"/home（用户主文件夹）\",\"t\":[\"这是系统默认的用户主文件夹（home directory）。 在你创建一个一般用户账号时，默认的用户主文件夹都会规范到这里来。 ~ 代表当前用户的主文件夹。\"]},\"8\":{\"h\":\"/lib（系统函数库）\",\"t\":[\"系统的函数库非常多，而 /lib 放置的则是在开机时会用到的函数库， 以及在 /bin 或 /sbin 下面的命令会调用的函数库而已。 * 你可以把函数库想象成是“外挂”，某些命令必须要有这些“外挂”才能够顺利完成程序的执行之意\"]},\"9\":{\"h\":\"/media（媒体设备暂挂区）\",\"t\":[\"media 是“媒体”的英文，顾名思义，这个 /media 下面放置的就是可删除的设备。 包括软盘、光盘、DVD等设备都暂时挂载于此。 常见的文件名有 /media/floppy，/media/cdrom 等\"]},\"10\":{\"h\":\"/mnt（额外设备暂挂区）\",\"t\":[\"如果你想要暂时挂载某些额外的设备，一般建议你可以放置到这个目录中。 在比较早的时候，这个目录的用途与 /media 相同。 只是有了 /media 之后，这个目录就被用来暂时挂载用了。\"]},\"11\":{\"h\":\"/opt (第三方软件安装目录)\",\"t\":[\"这个目录是用于安装第三方应用程序的，可以由用户自己指定安装位置。 当需要卸载第三方应用程序时，可以直接删除安装目录，而不影响系统其它任何设置\"]},\"12\":{\"h\":\"/root（管理员主文件夹）\",\"t\":[\"系统管理员（root）的主文件夹。 之所以放在这里，是因为如果进入单用户维护模式而仅挂载根目录时， 该目录就能够拥有root的主文件夹，所以我们会希望root的主文件夹与根目录放置在同一个分区中\"]},\"13\":{\"h\":\"/sbin（重要系统执行文件）\",\"t\":[\"Linux 有非常多的命令是来设置系统环境的，这些命令只有 root 才能够利用来“设置”系统， 其他用户最多只能用来“查询”而已。放在 /sbin 下面的为开机过程中所需的， 里面包括了开机、修复、还原系统所需要的命令。\"]},\"14\":{\"h\":\"/srv（服务数据存放目录）\",\"t\":[\"srv 可以视为“service”的缩写，是一些网络服务启动之后，这些服务所需要取用的数据目录。 常见的服务例如 WWW、FTP 等。 举例来说，WWW 服务需要的网页数据就可以放置在 /srv/www/ 里\"]},\"15\":{\"h\":\"/tmp（临时文件存放目录）\",\"t\":[\"这是让一般用户或者是正在执行的程序暂时放置文件的地方。 这个目录是任何人都能够访问，所以你需要定期清理一下。 当然，重要数据不可放置在此目录，因为系统会不定期将 /tmp 目录下的数据全部删除。\"]},\"16\":{\"h\":\"/lost+found\",\"t\":[\"这个目录是使用标准的 ext2/ext3 文件系统格式才会产生的一个目录， 目的相当于文件系统发生错误时，将一些丢失的片段放置到这个目录下。 这个目录通常会在分区的最顶层存在。\"]},\"17\":{\"h\":\"/proc（虚拟文件系统目录）\",\"t\":[\"这个目录本身是一个虚拟文件系统（virtual filesystem）。 它放置的数据都是在内存当中，例如系统内核、进程、外部设备以及网络状态等。 因为这个目录下的数据都是在内存当中的，所以本身并不占任何硬盘空间。\"]},\"18\":{\"h\":\"/sys（虚拟文件系统目录）\",\"t\":[\"这个目录其实跟 /proc 非常类似，也是一个虚拟的文件系统，主要也是记录与内核相关的信息。 包括目前已加载的内核模块与内核检测到的硬件设备信息等。这个目录同样不占硬盘容量。\"]},\"19\":{\"h\":\"/usr（系统软件资源目录）\",\"t\":[\"很多小白都会误以为 /usr 是 user 的缩写，其实 usr 是 Unix Software Resource 的缩写， 也就是 “UNIX 操作系统软件资源” 所放置的目录，而不是用户的数据，这点需要注意。 FHS 建议所有软件开发者应该将他们的数据合理地分别放置到这个目录下的子目录， 而不要自行新建该软件的独立目录\"]},\"20\":{\"h\":\"/var（常态可变动文件目录）\",\"t\":[\"该目录主要针对常态性可变动文件， 包括缓存（cache）、登录文件（log file）以及某些软件运行所产生的文件， 包括程序文件（lock file、run file），或者例如MySQL数据库的文件等。 如果 /usr 是安装时会占用较大硬盘容量的目录， 那么 /var 就是在系统运行后才会渐渐占用硬盘容量的目录。\"]},\"21\":{\"h\":\"Linux系统管理程序\",\"t\":[\"系统管理演变之路 sysvinit -> upstart -> systemd\"]},\"22\":{\"h\":\"Linux环境配置\"},\"23\":{\"h\":\"网卡配置\",\"t\":[\"cd /etc/sysconfig/network-scripts vi ifcfg-ens33 网卡配置说明 TYPE=Ethernet #网络类型 Ethernet PROXY_METHOD=none # BROWSER_ONLY=no BOOTPROTO=static #ip的配置方法 (none | static | bootp | dhcp) 不使用协议 | 静态分配IP | BOOTP协议 | DHCP协议 DEFROUTE=yes IPV4_FAILURE_FATAL=no IPV6INIT=yes IPV6_AUTOCONF=yes IPV6_DEFROUTE=yes IPV6_FAILURE_FATAL=no IPV6_ADDR_GEN_MODE=stable-privacy NAME=ens33 # 设备名称 UUID=ac9b66bf-74fb-4bda-b89f-c66ff84c9571 # 唯一标识 DEVICE=ens33 #接口(设备、网卡) ONBOOT=yes #开机启动 BOOTPROTO=static #静态IP IPADDR=192.168.58.100 #本机地址 NETMASK=255.255.255.0 #子网掩码 GATEWAY=192.168.58.2 #默认网关 DNS1=8.8.8.8 DNS2=114.114.114.114\"]},\"24\":{\"h\":\"yum环境配置\",\"t\":[\"# 备份原有的yum配置 mv CentOS-Base.repo CentOS-Base.repo.bak # 下载阿里云的yum源配置 curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo # 更新缓存 yum makecache\"]},\"25\":{\"h\":\"基础软件工具安装\",\"t\":[\"## 基本工具 yum install vim yum install gcc yum install git ## 网络工具包 yum install net-tools yum install telnet yum install wget yum install nmap\"]},\"26\":{\"h\":\"配置ssh登录\",\"t\":[\"## 修改root可以登录 vim /etc/ssh/sshd_config PasswordAuthentication yes PermitRootLogin yes systemctl restart sshd\"]},\"27\":{\"h\":\"Linux命令\"},\"28\":{\"h\":\"网络管理\"},\"29\":{\"h\":\"shell脚本\",\"t\":[\"shell脚本本质上是一组命令，批处理\"]},\"30\":{\"h\":\"shell脚本的解释器\",\"t\":[\"配置解释器\",\"/etc/shells\",\"常见的解释器\",\"/bin/sh /bin/bahs /bin/nologin /usr/bin/sh /usr/bin/bahs /usr/sbin/nologin /bin/tcsh /bin/csh\",\"查看当前解释器\",\"echo $SHELL\"]},\"31\":{\"h\":\"脚本结构\",\"t\":[\"脚本声明 注释信息 可执行语句 #!/bin/bash ##注释 ... ...\"]},\"32\":{\"h\":\"shell的预定义变量\"},\"33\":{\"h\":\"文件测试\",\"t\":[\"[ -d /etc/fstab ] 测试是否为目录 echo $? 输出上一个测试的结果 [ -f /etc/fstab ] echo $?\"]},\"34\":{\"h\":\"逻辑测试\",\"t\":[\"[ -e /dev/cdrom ] && echo \\\"Exist\\\"\"]},\"35\":{\"h\":\"整数值比较\",\"t\":[\"[ 10 -gt 10 ]\"]},\"36\":{\"h\":\"字符串比较\",\"t\":[\"[ -z $String ]\"]},\"37\":{\"h\":\"if\",\"t\":[\"#!/bin/bash DIR=\\\"/media/cdrom\\\" if [ !-e $DIR ] then mkdir -p $DIR fi\",\"#!/bin/bash ping -c 3 -i 0.2 -W 3 $1 &> /dev/null if [ $? -eq 0 ] then echo \\\"Host $1 is up\\\" else echo \\\"Host $1 is down\\\" fi\"]},\"38\":{\"h\":\"for\",\"t\":[\"#!/bin/bash read -p \\\"Enter The Users Password:\\\" PASSWD for UNAME in \\\"cat users.txt\\\" do id $UNAME &> /dev/null if [ $? -eq 0 ] then echo \\\"Already exists\\\" else useradd $UNAME &> /dev/null echo \\\"$PASSWD\\\" | passwd -stdin $UNAME &> /dev/null if then echo \\\"Create success\\\" else echo \\\"Create failure\\\" fi fi done\"]},\"39\":{\"h\":\"while\",\"t\":[\"#!/bin/bash while true do echo \\\"对\\\" done\"]},\"40\":{\"h\":\"case\",\"t\":[\"#!/bin/bash case \\\"$KEY\\\" in [a-z][A-Z] echo \\\"输入---\\\" esac\"]},\"41\":{\"h\":\"计划任务服务\",\"t\":[\"at 22:30\"]},\"42\":{\"h\":\"你好\"},\"43\":{\"h\":\"git\",\"t\":[\"写这篇文章的目的：关于作者多次被git折磨，所以写这篇文章梳理git的使用的整理流程，以及一些注意点\"]},\"44\":{\"h\":\"git的基本使用\",\"t\":[\"个人建议：不要用一个大的git仓库管理一堆git仓库\",\"1、git的初始化本地仓库\",\"git init # 新建一个目录，将其初始化为Git代码库 $ git init [project-name] # 下载一个项目和它的整个代码历史 $ git clone [url]\",\"2、配置\",\"配置的注意点： 1、网上很多教程都是配置全局的账号，但是不适用所有场景。 推荐：如果希望多个仓库对应不同的账户，在c盘的.ssh文件夹下配置config（多账户配置） git config --global --list 查看全局配置 配置全局 git config --global user.name \\\"执一\\\" git config --global user.email \\\"*****@qq.com\\\" 配置局部 git config user.name \\\"百晓\\\" git config user.email \\\"******@163.com\\\" config文件配置 # github account [user1] Host github.com HostName github.com User user1 IdentityFile /c/Users/xxx/.ssh/id_user1_rsa IdentitiesOnly yes # github account [user2] Host github.com HostName github.com User user2 IdentityFile /c/Users/xxx/.ssh/id_user2_rsa IdentitiesOnly yes\",\"3、生成密钥\",\"注意:生成的密钥是可以指定生成的地址的（在多账户的情况下需要管理好不同的key） ssh-keygen -t rsa -C \\\"*******@qq.com\\\"\",\"4、远程仓库\",\"当我们把本地的仓库配置好之后，有两个选择。 1、选择一个远程仓库，可以用gitee或者是GitHub，在远程建立一个空的仓库，在本地也建一个空的仓库。然后将两个仓库做关联（注意要在远程的仓库中配置公钥） 2、在远程仓库中建立一个空仓库，然后克隆到本地（好处：不用手动做关联） # 增加一个新的远程仓库，并命名 $ git remote add [shortname] [url] # 下载远程仓库的所有变动 $ git fetch [shortname] # 显示所有远程仓库 $ git remote -v # 显示某个远程仓库的信息 $ git remote show [shortname] # 取回远程仓库的变化，并与本地分支合并 $ git pull [shortname] [branch] # 上传本地指定分支到远程仓库 $ git push [shortname] [branch] # 强行推送当前分支到远程仓库，即使有冲突 $ git push [shortname --force # 推送所有分支到远程仓库 $ git push [shortname] --all\",\"5、分支管理\",\"当我们的本地仓库和远程仓库建立好关联之后。接下做的就是分支管理。默认初识状态都是master分支 作为开发人员：最好及最少要使用master/develop工作流模型 # 列出所有本地分支 $ git branch # 列出所有远程分支 $ git branch -r # 列出所有本地分支和远程分支 $ git branch -a # 新建一个分支，但依然停留在当前分支 $ git branch [branch-name] # 新建一个分支，并切换到该分支 $ git checkout -b [branch] # 新建一个分支，指向指定commit $ git branch [branch] [commit] # 新建一个分支，与指定的远程分支建立追踪关系 $ git branch --track [branch] [remote-branch] # 切换到指定分支，并更新工作区 $ git checkout [branch-name] # 切换到上一个分支 $ git checkout - # 建立追踪关系，在现有分支与指定的远程分支之间 $ git branch --set-upstream [branch] [remote-branch] # 合并指定分支到当前分支 $ git merge [branch] # 选择一个commit，合并进当前分支 $ git cherry-pick [commit] # 删除分支 $ git branch -d [branch-name] # 删除远程分支 $ git push origin --delete [branch-name] $ git branch -dr [remote/branch]\",\"6、标签管理\",\"作者之前一直不怎么使用标签，这里特地查询了一下标签的作用和好处 1、标签通常用来做版本号，给commit打上标签有助于分版本 # 列出所有tag $ git tag # 新建一个tag在当前commit $ git tag [tag] # 新建一个tag在指定commit $ git tag [tag] [commit] # 删除本地tag $ git tag -d [tag] # 删除远程tag $ git push origin :refs/tags/[tagName] # 查看tag信息 $ git show [tag] # 提交指定tag $ git push [remote] [tag] # 提交所有tag $ git push [remote] --tags # 新建一个分支，指向某个tag $ git checkout -b [branch] [tag]\",\"7、文件管理\",\"在我们把所有的仓库、分支做好管理之后。我们就可以开始做文件的管理了 文件的add（工作区->暂存区） # 添加指定文件到暂存区 $ git add [file1] [file2] ... # 添加指定目录到暂存区，包括子目录 $ git add [dir] # 添加当前目录的所有文件到暂存区 $ git add . # 添加每个变化前，都会要求确认 # 对于同一个文件的多处变化，可以实现分次提交 $ git add -p # 删除工作区文件，并且将这次删除放入暂存区 $ git rm [file1] [file2] ... # 停止追踪指定文件，但该文件会保留在工作区 $ git rm --cached [file] # 改名文件，并且将这个改名放入暂存区 $ git mv [file-original] [file-renamed] 文件的commit（暂存区->本地仓库） # 提交暂存区到仓库区 $ git commit -m [message] # 提交暂存区的指定文件到仓库区 $ git commit [file1] [file2] ... -m [message] # 提交工作区自上次commit之后的变化，直接到仓库区 $ git commit -a # 提交时显示所有diff信息 $ git commit -v # 使用一次新的commit，替代上一次提交 # 如果代码没有任何新变化，则用来改写上一次commit的提交信息 $ git commit --amend -m [message] # 重做上一次commit，并包括指定文件的新变化 $ git commit --amend [file1] [file2] ... 文件撤销 # 恢复暂存区的指定文件到工作区 $ git checkout [file] # 恢复某个commit的指定文件到暂存区和工作区 $ git checkout [commit] [file] # 恢复暂存区的所有文件到工作区 $ git checkout . # 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变 $ git reset [file] # 重置暂存区与工作区，与上一次commit保持一致 $ git reset --hard # 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变 $ git reset [commit] # 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致 $ git reset --hard [commit] # 重置当前HEAD为指定commit，但保持暂存区和工作区不变 $ git reset --keep [commit] # 新建一个commit，用来撤销指定commit # 后者的所有变化都将被前者抵消，并且应用到当前分支 $ git revert [commit] 暂时将未提交的变化移除，稍后再移入 $ git stash $ git stash pop 文件的日志管理 # 显示有变更的文件 $ git status # 显示当前分支的版本历史 $ git log # 显示commit历史，以及每次commit发生变更的文件 $ git log --stat # 搜索提交历史，根据关键词 $ git log -S [keyword] # 显示某个commit之后的所有变动，每个commit占据一行 $ git log [tag] HEAD --pretty=format:%s # 显示某个commit之后的所有变动，其\\\"提交说明\\\"必须符合搜索条件 $ git log [tag] HEAD --grep feature # 显示某个文件的版本历史，包括文件改名 $ git log --follow [file] $ git whatchanged [file] # 显示指定文件相关的每一次diff $ git log -p [file] # 显示过去5次提交 $ git log -5 --pretty --oneline # 显示所有提交过的用户，按提交次数排序 $ git shortlog -sn # 显示指定文件是什么人在什么时间修改过 $ git blame [file] # 显示暂存区和工作区的差异 $ git diff # 显示暂存区和上一个commit的差异 $ git diff --cached [file] # 显示工作区与当前分支最新commit之间的差异 $ git diff HEAD # 显示两次提交之间的差异 $ git diff [first-branch]...[second-branch] # 显示今天你写了多少行代码 $ git diff --shortstat \\\"@{0 day ago}\\\" # 显示某次提交的元数据和内容变化 $ git show [commit] # 显示某次提交发生变化的文件 $ git show --name-only [commit] # 显示某次提交时，某个文件的内容 $ git show [commit]:[filename] # 显示当前分支的最近几次提交 $ git reflog\",\"8、推送和拉取\",\"当我们把文件放到本地仓库的时候就可以对远程仓库做推送 # 下载远程仓库的所有变动 $ git fetch [remote] # 显示所有远程仓库 $ git remote -v # 显示某个远程仓库的信息 $ git remote show [remote] # 增加一个新的远程仓库，并命名 $ git remote add [shortname] [url] # 取回远程仓库的变化，并与本地分支合并 $ git pull [remote] [branch] # 上传本地指定分支到远程仓库 $ git push [remote] [branch] # 强行推送当前分支到远程仓库，即使有冲突 $ git push [remote] --force # 推送所有分支到远程仓库 $ git push [remote] --all\"]},\"45\":{\"h\":\"git的工作流\",\"t\":[\"1、Git Flow\",\"master\",\"develop\",\"协助分支\",\"Feature Branch\",\"Release Branch\",\"Hotfix Branch\",\"当 develop 上的代码达到一个稳定的状态，可以发布版本的时候，develop上这些修改会以某种特别方式被合并到 master 分支上，然后标记上对应的版本标签。\",\"2、GitHub Flow\",\"master\",\"永远只有一个master分支\"]},\"46\":{\"h\":\"git的钩子\"},\"47\":{\"h\":\"搭建GitLab\"},\"48\":{\"h\":\"GitHub和Gitee\",\"t\":[\"Gitee仓库注意点 1、最好设置master/develop的开发模式（个人开发者） 2、将两个分支均设为保护模式并且禁止推送，这样可以自动生成pull request 3、推荐设置代码审查，保护源代码的安全\"]},\"49\":{\"h\":\"svn\"},\"50\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"51\":{\"h\":\"Computer\"},\"52\":{\"h\":\"Linux\"},\"53\":{\"h\":\"Vcs\"}},\"dirtCount\":0,\"index\":[[\"保护源代码的安全\",{\"1\":{\"48\":1}}],[\"保持根目录越小越好\",{\"1\":{\"2\":1}}],[\"个人开发者\",{\"1\":{\"48\":1}}],[\"个人建议\",{\"1\":{\"44\":1}}],[\"最好设置master\",{\"1\":{\"48\":1}}],[\"最好及最少要使用master\",{\"1\":{\"44\":1}}],[\"搭建gitlab\",{\"0\":{\"47\":1}}],[\"永远只有一个master分支\",{\"1\":{\"45\":1}}],[\"上的代码达到一个稳定的状态\",{\"1\":{\"45\":1}}],[\"上传本地指定分支到远程仓库\",{\"1\":{\"44\":2}}],[\"协助分支\",{\"1\":{\"45\":1}}],[\"某个文件的内容\",{\"1\":{\"44\":1}}],[\"某些命令必须要有这些\",{\"1\":{\"8\":1}}],[\"按提交次数排序\",{\"1\":{\"44\":1}}],[\"必须符合搜索条件\",{\"1\":{\"44\":1}}],[\"每个commit占据一行\",{\"1\":{\"44\":1}}],[\"根据关键词\",{\"1\":{\"44\":1}}],[\"根目录所在的文件系统也比较不容易发生问题\",{\"1\":{\"2\":1}}],[\"根目录是整个系统最重要的一个目录\",{\"1\":{\"2\":1}}],[\"根目录\",{\"0\":{\"2\":1},\"1\":{\"2\":1}}],[\"搜索提交历史\",{\"1\":{\"44\":1}}],[\"稍后再移入\",{\"1\":{\"44\":1}}],[\"暂时将未提交的变化移除\",{\"1\":{\"44\":1}}],[\"暂存区\",{\"1\":{\"44\":1}}],[\"后者的所有变化都将被前者抵消\",{\"1\":{\"44\":1}}],[\"用来撤销指定commit\",{\"1\":{\"44\":1}}],[\"用户主文件夹\",{\"0\":{\"7\":1}}],[\"keyword\",{\"1\":{\"44\":1}}],[\"keygen\",{\"1\":{\"44\":1}}],[\"keep\",{\"1\":{\"44\":1}}],[\"同时重置暂存区和工作区\",{\"1\":{\"44\":1}}],[\"同时重置暂存区\",{\"1\":{\"44\":1}}],[\"同时根目录也与开机\",{\"1\":{\"2\":1}}],[\"恢复暂存区的所有文件到工作区\",{\"1\":{\"44\":1}}],[\"恢复暂存区的指定文件到工作区\",{\"1\":{\"44\":1}}],[\"恢复某个commit的指定文件到暂存区和工作区\",{\"1\":{\"44\":1}}],[\"重置当前head为指定commit\",{\"1\":{\"44\":1}}],[\"重置当前分支的head为指定commit\",{\"1\":{\"44\":1}}],[\"重置当前分支的指针为指定commit\",{\"1\":{\"44\":1}}],[\"重置暂存区与工作区\",{\"1\":{\"44\":1}}],[\"重置暂存区的指定文件\",{\"1\":{\"44\":1}}],[\"重做上一次commit\",{\"1\":{\"44\":1}}],[\"重要数据不可放置在此目录\",{\"1\":{\"15\":1}}],[\"重要系统执行文件\",{\"0\":{\"13\":1}}],[\"则用来改写上一次commit的提交信息\",{\"1\":{\"44\":1}}],[\"替代上一次提交\",{\"1\":{\"44\":1}}],[\"使用一次新的commit\",{\"1\":{\"44\":1}}],[\"直接到仓库区\",{\"1\":{\"44\":1}}],[\"改名文件\",{\"1\":{\"44\":1}}],[\"停止追踪指定文件\",{\"1\":{\"44\":1}}],[\"都会要求确认\",{\"1\":{\"44\":1}}],[\"添加每个变化前\",{\"1\":{\"44\":1}}],[\"添加当前目录的所有文件到暂存区\",{\"1\":{\"44\":1}}],[\"添加指定目录到暂存区\",{\"1\":{\"44\":1}}],[\"添加指定文件到暂存区\",{\"1\":{\"44\":1}}],[\"工作区\",{\"1\":{\"44\":1}}],[\"我们就可以开始做文件的管理了\",{\"1\":{\"44\":1}}],[\"分支上\",{\"1\":{\"45\":1}}],[\"分支做好管理之后\",{\"1\":{\"44\":1}}],[\"分支管理\",{\"1\":{\"44\":1}}],[\"指向某个tag\",{\"1\":{\"44\":1}}],[\"指向指定commit\",{\"1\":{\"44\":1}}],[\"提交说明\",{\"1\":{\"44\":1}}],[\"提交时显示所有diff信息\",{\"1\":{\"44\":1}}],[\"提交工作区自上次commit之后的变化\",{\"1\":{\"44\":1}}],[\"提交暂存区的指定文件到仓库区\",{\"1\":{\"44\":1}}],[\"提交暂存区到仓库区\",{\"1\":{\"44\":1}}],[\"提交所有tag\",{\"1\":{\"44\":1}}],[\"提交指定tag\",{\"1\":{\"44\":1}}],[\"给commit打上标签有助于分版本\",{\"1\":{\"44\":1}}],[\"作者之前一直不怎么使用标签\",{\"1\":{\"44\":1}}],[\"作为开发人员\",{\"1\":{\"44\":1}}],[\"标签通常用来做版本号\",{\"1\":{\"44\":1}}],[\"标签管理\",{\"1\":{\"44\":1}}],[\"标准建议\",{\"1\":{\"2\":1}}],[\"6\",{\"1\":{\"44\":1}}],[\"删除工作区文件\",{\"1\":{\"44\":1}}],[\"删除远程tag\",{\"1\":{\"44\":1}}],[\"删除远程分支\",{\"1\":{\"44\":1}}],[\"删除本地tag\",{\"1\":{\"44\":1}}],[\"删除分支\",{\"1\":{\"44\":1}}],[\"合并进当前分支\",{\"1\":{\"44\":1}}],[\"合并指定分支到当前分支\",{\"1\":{\"44\":1}}],[\"选择一个commit\",{\"1\":{\"44\":1}}],[\"选择一个远程仓库\",{\"1\":{\"44\":1}}],[\"建立追踪关系\",{\"1\":{\"44\":1}}],[\"建议所有软件开发者应该将他们的数据合理地分别放置到这个目录下的子目录\",{\"1\":{\"19\":1}}],[\"切换到上一个分支\",{\"1\":{\"44\":1}}],[\"切换到指定分支\",{\"1\":{\"44\":1}}],[\"与指定commit一致\",{\"1\":{\"44\":1}}],[\"与指定的远程分支建立追踪关系\",{\"1\":{\"44\":1}}],[\"与上一次commit保持一致\",{\"1\":{\"44\":2}}],[\"与一般账号所使用\",{\"1\":{\"3\":1}}],[\"新建一个commit\",{\"1\":{\"44\":1}}],[\"新建一个tag在指定commit\",{\"1\":{\"44\":1}}],[\"新建一个tag在当前commit\",{\"1\":{\"44\":1}}],[\"新建一个分支\",{\"1\":{\"44\":5}}],[\"新建一个目录\",{\"1\":{\"44\":1}}],[\"列出所有tag\",{\"1\":{\"44\":1}}],[\"列出所有远程分支\",{\"1\":{\"44\":1}}],[\"列出所有本地分支和远程分支\",{\"1\":{\"44\":1}}],[\"列出所有本地分支\",{\"1\":{\"44\":1}}],[\"接下做的就是分支管理\",{\"1\":{\"44\":1}}],[\"接口\",{\"1\":{\"23\":1}}],[\"5\",{\"1\":{\"44\":2}}],[\"58\",{\"1\":{\"23\":2}}],[\"推送和拉取\",{\"1\":{\"44\":1}}],[\"推送所有分支到远程仓库\",{\"1\":{\"44\":2}}],[\"推荐设置代码审查\",{\"1\":{\"48\":1}}],[\"推荐\",{\"1\":{\"44\":1}}],[\"即使有冲突\",{\"1\":{\"44\":2}}],[\"强行推送当前分支到远程仓库\",{\"1\":{\"44\":2}}],[\"并且应用到当前分支\",{\"1\":{\"44\":1}}],[\"并且将这个改名放入暂存区\",{\"1\":{\"44\":1}}],[\"并且将这次删除放入暂存区\",{\"1\":{\"44\":1}}],[\"并包括指定文件的新变化\",{\"1\":{\"44\":1}}],[\"并更新工作区\",{\"1\":{\"44\":1}}],[\"并切换到该分支\",{\"1\":{\"44\":1}}],[\"并与本地分支合并\",{\"1\":{\"44\":2}}],[\"并命名\",{\"1\":{\"44\":2}}],[\"取回远程仓库的变化\",{\"1\":{\"44\":2}}],[\"显示当前分支的最近几次提交\",{\"1\":{\"44\":1}}],[\"显示当前分支的版本历史\",{\"1\":{\"44\":1}}],[\"显示某次提交时\",{\"1\":{\"44\":1}}],[\"显示某次提交发生变化的文件\",{\"1\":{\"44\":1}}],[\"显示某次提交的元数据和内容变化\",{\"1\":{\"44\":1}}],[\"显示某个文件的版本历史\",{\"1\":{\"44\":1}}],[\"显示某个commit之后的所有变动\",{\"1\":{\"44\":2}}],[\"显示某个远程仓库的信息\",{\"1\":{\"44\":2}}],[\"显示今天你写了多少行代码\",{\"1\":{\"44\":1}}],[\"显示两次提交之间的差异\",{\"1\":{\"44\":1}}],[\"显示工作区与当前分支最新commit之间的差异\",{\"1\":{\"44\":1}}],[\"显示暂存区和上一个commit的差异\",{\"1\":{\"44\":1}}],[\"显示暂存区和工作区的差异\",{\"1\":{\"44\":1}}],[\"显示指定文件是什么人在什么时间修改过\",{\"1\":{\"44\":1}}],[\"显示指定文件相关的每一次diff\",{\"1\":{\"44\":1}}],[\"显示所有提交过的用户\",{\"1\":{\"44\":1}}],[\"显示所有远程仓库\",{\"1\":{\"44\":2}}],[\"显示过去5次提交\",{\"1\":{\"44\":1}}],[\"显示commit历史\",{\"1\":{\"44\":1}}],[\"显示有变更的文件\",{\"1\":{\"44\":1}}],[\"增加一个新的远程仓库\",{\"1\":{\"44\":2}}],[\"好处\",{\"1\":{\"44\":1}}],[\"然后标记上对应的版本标签\",{\"1\":{\"45\":1}}],[\"然后克隆到本地\",{\"1\":{\"44\":1}}],[\"然后将两个仓库做关联\",{\"1\":{\"44\":1}}],[\"远程仓库\",{\"1\":{\"44\":1}}],[\"404\",{\"1\":{\"50\":1}}],[\"4\",{\"1\":{\"44\":1}}],[\"4bda\",{\"1\":{\"23\":1}}],[\"生成的密钥是可以指定生成的地址的\",{\"1\":{\"44\":1}}],[\"生成密钥\",{\"1\":{\"44\":1}}],[\"注意要在远程的仓库中配置公钥\",{\"1\":{\"44\":1}}],[\"注意\",{\"1\":{\"44\":1}}],[\"注释\",{\"1\":{\"31\":1}}],[\"注释信息\",{\"1\":{\"31\":1}}],[\"xxx\",{\"1\":{\"44\":2}}],[\"百晓\",{\"1\":{\"44\":1}}],[\"qq\",{\"1\":{\"44\":2}}],[\"执一\",{\"1\":{\"44\":1}}],[\"执行文件目录\",{\"0\":{\"3\":1}}],[\"多账户配置\",{\"1\":{\"44\":1}}],[\"将两个分支均设为保护模式并且禁止推送\",{\"1\":{\"48\":1}}],[\"将其初始化为git代码库\",{\"1\":{\"44\":1}}],[\"将一些丢失的片段放置到这个目录下\",{\"1\":{\"16\":1}}],[\"不用手动做关联\",{\"1\":{\"44\":1}}],[\"不要用一个大的git仓库管理一堆git仓库\",{\"1\":{\"44\":1}}],[\"不使用协议\",{\"1\":{\"23\":1}}],[\"关于作者多次被git折磨\",{\"1\":{\"43\":1}}],[\"写这篇文章的目的\",{\"1\":{\"43\":1}}],[\"计划任务服务\",{\"0\":{\"41\":1}}],[\"输入\",{\"1\":{\"40\":1}}],[\"输出上一个测试的结果\",{\"1\":{\"33\":1}}],[\"对于同一个文件的多处变化\",{\"1\":{\"44\":1}}],[\"对\",{\"1\":{\"39\":1}}],[\"30\",{\"1\":{\"41\":1}}],[\"3\",{\"1\":{\"37\":2,\"44\":1,\"48\":1}}],[\"z\",{\"1\":{\"36\":1,\"40\":2}}],[\"zero\",{\"1\":{\"5\":1}}],[\"字符串比较\",{\"0\":{\"36\":1}}],[\"整数值比较\",{\"0\":{\"35\":1}}],[\"逻辑测试\",{\"0\":{\"34\":1}}],[\"$key\",{\"1\":{\"40\":1}}],[\"$passwd\",{\"1\":{\"38\":1}}],[\"$uname\",{\"1\":{\"38\":3}}],[\"$1\",{\"1\":{\"37\":3}}],[\"$dir\",{\"1\":{\"37\":2}}],[\"$string\",{\"1\":{\"36\":1}}],[\"$shell\",{\"1\":{\"30\":1}}],[\"$\",{\"1\":{\"33\":2,\"37\":1,\"38\":1,\"44\":87}}],[\"测试是否为目录\",{\"1\":{\"33\":1}}],[\"文件撤销\",{\"1\":{\"44\":1}}],[\"文件的日志管理\",{\"1\":{\"44\":1}}],[\"文件的commit\",{\"1\":{\"44\":1}}],[\"文件的add\",{\"1\":{\"44\":1}}],[\"文件管理\",{\"1\":{\"44\":1}}],[\"文件测试\",{\"0\":{\"33\":1}}],[\"文件系统格式才会产生的一个目录\",{\"1\":{\"16\":1}}],[\"可执行语句\",{\"1\":{\"31\":1}}],[\"可以发布版本的时候\",{\"1\":{\"45\":1}}],[\"可以实现分次提交\",{\"1\":{\"44\":1}}],[\"可以用gitee或者是github\",{\"1\":{\"44\":1}}],[\"可以视为\",{\"1\":{\"14\":1}}],[\"可以直接删除安装目录\",{\"1\":{\"11\":1}}],[\"可以由用户自己指定安装位置\",{\"1\":{\"11\":1}}],[\"脚本声明\",{\"1\":{\"31\":1}}],[\"脚本结构\",{\"0\":{\"31\":1}}],[\"查看tag信息\",{\"1\":{\"44\":1}}],[\"查看全局配置\",{\"1\":{\"44\":1}}],[\"查看当前解释器\",{\"1\":{\"30\":1}}],[\"查询\",{\"1\":{\"13\":1}}],[\"批处理\",{\"1\":{\"29\":1}}],[\"yes\",{\"1\":{\"26\":2,\"44\":2}}],[\"yum\",{\"1\":{\"24\":2,\"25\":7}}],[\"yum环境配置\",{\"0\":{\"24\":1}}],[\"pop\",{\"1\":{\"44\":1}}],[\"pick\",{\"1\":{\"44\":1}}],[\"ping\",{\"1\":{\"37\":1}}],[\"push\",{\"1\":{\"44\":10}}],[\"pull\",{\"1\":{\"44\":2}}],[\"passwd\",{\"1\":{\"38\":2}}],[\"password\",{\"1\":{\"38\":1}}],[\"passwordauthentication\",{\"1\":{\"26\":1}}],[\"p\",{\"1\":{\"37\":1,\"38\":1,\"44\":2}}],[\"permitrootlogin\",{\"1\":{\"26\":1}}],[\"pretty\",{\"1\":{\"44\":1}}],[\"pretty=format\",{\"1\":{\"44\":1}}],[\"privacy\",{\"1\":{\"23\":1}}],[\"project\",{\"1\":{\"44\":1}}],[\"proxy\",{\"1\":{\"23\":1}}],[\"proc\",{\"0\":{\"17\":1},\"1\":{\"18\":1}}],[\"修改root可以登录\",{\"1\":{\"26\":1}}],[\"修复\",{\"1\":{\"13\":1}}],[\"配置局部\",{\"1\":{\"44\":1}}],[\"配置全局\",{\"1\":{\"44\":1}}],[\"配置的注意点\",{\"1\":{\"44\":1}}],[\"配置\",{\"1\":{\"44\":1}}],[\"配置解释器\",{\"1\":{\"30\":1}}],[\"配置ssh登录\",{\"0\":{\"26\":1}}],[\"配置文件目录\",{\"0\":{\"6\":1}}],[\"whatchanged\",{\"1\":{\"44\":1}}],[\"while\",{\"0\":{\"39\":1},\"1\":{\"39\":1}}],[\"w\",{\"1\":{\"37\":1}}],[\"wget\",{\"1\":{\"25\":1}}],[\"www\",{\"1\":{\"14\":3}}],[\"基本工具\",{\"1\":{\"25\":1}}],[\"基础软件工具安装\",{\"0\":{\"25\":1}}],[\"更新缓存\",{\"1\":{\"24\":1}}],[\"7\",{\"1\":{\"24\":1,\"44\":1}}],[\"74fb\",{\"1\":{\"23\":1}}],[\"head\",{\"1\":{\"44\":3}}],[\"hard\",{\"1\":{\"44\":2}}],[\"hotfix\",{\"1\":{\"45\":1}}],[\"hostname\",{\"1\":{\"44\":2}}],[\"host\",{\"1\":{\"37\":2,\"44\":2}}],[\"home\",{\"0\":{\"7\":1},\"1\":{\"7\":1}}],[\"https\",{\"1\":{\"24\":1}}],[\"下载远程仓库的所有变动\",{\"1\":{\"44\":2}}],[\"下载一个项目和它的整个代码历史\",{\"1\":{\"44\":1}}],[\"下载阿里云的yum源配置\",{\"1\":{\"24\":1}}],[\"下面的为开机过程中所需的\",{\"1\":{\"13\":1}}],[\"下面的命令会调用的函数库而已\",{\"1\":{\"8\":1}}],[\"下面的命令可以被\",{\"1\":{\"3\":1}}],[\"下面放置的就是可删除的设备\",{\"1\":{\"9\":1}}],[\"备份原有的yum配置\",{\"1\":{\"24\":1}}],[\"8\",{\"1\":{\"23\":3,\"44\":1}}],[\"默认初识状态都是master分支\",{\"1\":{\"44\":1}}],[\"默认网关\",{\"1\":{\"23\":1}}],[\"默认的用户主文件夹都会规范到这里来\",{\"1\":{\"7\":1}}],[\"22\",{\"1\":{\"41\":1}}],[\"2\",{\"1\":{\"23\":1,\"37\":1,\"44\":2,\"45\":1,\"48\":1}}],[\"255\",{\"1\":{\"23\":2}}],[\"grep\",{\"1\":{\"44\":1}}],[\"global\",{\"1\":{\"44\":3}}],[\"gt\",{\"1\":{\"35\":1}}],[\"gitee仓库注意点\",{\"1\":{\"48\":1}}],[\"github和gitee\",{\"0\":{\"48\":1}}],[\"github\",{\"1\":{\"44\":6,\"45\":1}}],[\"git的钩子\",{\"0\":{\"46\":1}}],[\"git的工作流\",{\"0\":{\"45\":1}}],[\"git的初始化本地仓库\",{\"1\":{\"44\":1}}],[\"git的基本使用\",{\"0\":{\"44\":1}}],[\"git\",{\"0\":{\"43\":1},\"1\":{\"25\":1,\"44\":93,\"45\":1}}],[\"gcc\",{\"1\":{\"25\":1}}],[\"gateway=192\",{\"1\":{\"23\":1}}],[\"gen\",{\"1\":{\"23\":1}}],[\"子网掩码\",{\"1\":{\"23\":1}}],[\"0\",{\"1\":{\"23\":1,\"37\":2,\"38\":1,\"44\":1}}],[\"本机地址\",{\"1\":{\"23\":1}}],[\"163\",{\"1\":{\"44\":1}}],[\"168\",{\"1\":{\"23\":2}}],[\"1\",{\"1\":{\"44\":4,\"45\":1,\"48\":1}}],[\"10\",{\"1\":{\"35\":2}}],[\"100\",{\"1\":{\"23\":1}}],[\"114\",{\"1\":{\"23\":3}}],[\"静态ip\",{\"1\":{\"23\":1}}],[\"静态分配ip\",{\"1\":{\"23\":1}}],[\"开机启动\",{\"1\":{\"23\":1}}],[\"开机文件目录\",{\"0\":{\"4\":1}}],[\"唯一标识\",{\"1\":{\"23\":1}}],[\"设备\",{\"1\":{\"23\":1}}],[\"设备名称\",{\"1\":{\"23\":1}}],[\"设置\",{\"1\":{\"13\":1}}],[\"ago\",{\"1\":{\"44\":1}}],[\"amend\",{\"1\":{\"44\":2}}],[\"add\",{\"1\":{\"44\":6}}],[\"addr\",{\"1\":{\"23\":1}}],[\"account\",{\"1\":{\"44\":2}}],[\"at\",{\"1\":{\"41\":1}}],[\"a\",{\"1\":{\"40\":2,\"44\":2}}],[\"all\",{\"1\":{\"44\":2}}],[\"already\",{\"1\":{\"38\":1}}],[\"aliyun\",{\"1\":{\"24\":1}}],[\"autoconf=yes\",{\"1\":{\"23\":1}}],[\"|\",{\"1\":{\"23\":6,\"38\":1}}],[\"original\",{\"1\":{\"44\":1}}],[\"origin\",{\"1\":{\"44\":2}}],[\"o\",{\"1\":{\"24\":1}}],[\"only\",{\"1\":{\"44\":1}}],[\"only=no\",{\"1\":{\"23\":1}}],[\"oneline\",{\"1\":{\"44\":1}}],[\"onboot=yes\",{\"1\":{\"23\":1}}],[\"opt\",{\"0\":{\"11\":1}}],[\"网上很多教程都是配置全局的账号\",{\"1\":{\"44\":1}}],[\"网络管理\",{\"0\":{\"28\":1}}],[\"网络工具包\",{\"1\":{\"25\":1}}],[\"网络类型\",{\"1\":{\"23\":1}}],[\"网卡\",{\"1\":{\"23\":1}}],[\"网卡配置说明\",{\"1\":{\"23\":1}}],[\"网卡配置\",{\"0\":{\"23\":1}}],[\"identitiesonly\",{\"1\":{\"44\":2}}],[\"identityfile\",{\"1\":{\"44\":2}}],[\"id\",{\"1\":{\"38\":1,\"44\":2}}],[\"is\",{\"1\":{\"37\":2}}],[\"i\",{\"1\":{\"37\":1}}],[\"if\",{\"0\":{\"37\":1},\"1\":{\"37\":2,\"38\":2}}],[\"ifcfg\",{\"1\":{\"23\":1}}],[\"in\",{\"1\":{\"38\":1,\"40\":1}}],[\"install\",{\"1\":{\"25\":7}}],[\"inittab\",{\"1\":{\"6\":1}}],[\"init\",{\"1\":{\"6\":1,\"44\":2}}],[\"ipaddr=192\",{\"1\":{\"23\":1}}],[\"ipv6\",{\"1\":{\"23\":4}}],[\"ipv6init=yes\",{\"1\":{\"23\":1}}],[\"ipv4\",{\"1\":{\"23\":1}}],[\"ip的配置方法\",{\"1\":{\"23\":1}}],[\"name\",{\"1\":{\"44\":8}}],[\"name=ens33\",{\"1\":{\"23\":1}}],[\"not\",{\"1\":{\"50\":1}}],[\"nologin\",{\"1\":{\"30\":2}}],[\"none\",{\"1\":{\"23\":1}}],[\"nmap\",{\"1\":{\"25\":1}}],[\"net\",{\"1\":{\"25\":1}}],[\"netmask=255\",{\"1\":{\"23\":1}}],[\"network\",{\"1\":{\"23\":1}}],[\"null\",{\"1\":{\"5\":1,\"37\":1,\"38\":3}}],[\">本地仓库\",{\"1\":{\"44\":1}}],[\">暂存区\",{\"1\":{\"44\":1}}],[\">\",{\"1\":{\"21\":2,\"37\":1,\"38\":3}}],[\"就是在系统运行后才会渐渐占用硬盘容量的目录\",{\"1\":{\"20\":1}}],[\"就等于访问某个设备\",{\"1\":{\"5\":1}}],[\"那么\",{\"1\":{\"20\":1}}],[\"以及每次commit发生变更的文件\",{\"1\":{\"44\":1}}],[\"以及一些注意点\",{\"1\":{\"43\":1}}],[\"以及某些软件运行所产生的文件\",{\"1\":{\"20\":1}}],[\"以及在\",{\"1\":{\"8\":1}}],[\"登录文件\",{\"1\":{\"20\":1}}],[\"该目录主要针对常态性可变动文件\",{\"1\":{\"20\":1}}],[\"该目录就能够拥有root的主文件夹\",{\"1\":{\"12\":1}}],[\"常态可变动文件目录\",{\"0\":{\"20\":1}}],[\"常见的解释器\",{\"1\":{\"30\":1}}],[\"常见的服务例如\",{\"1\":{\"14\":1}}],[\"常见的文件名有\",{\"1\":{\"9\":1}}],[\"vcs\",{\"0\":{\"53\":1}}],[\"v\",{\"1\":{\"44\":3}}],[\"vim\",{\"1\":{\"25\":1,\"26\":1}}],[\"vi\",{\"1\":{\"23\":1}}],[\"virtual\",{\"1\":{\"17\":1}}],[\"var\",{\"0\":{\"20\":1},\"1\":{\"20\":1}}],[\"操作系统软件资源\",{\"1\":{\"19\":1}}],[\"也就是\",{\"1\":{\"19\":1}}],[\"也是一个虚拟的文件系统\",{\"1\":{\"18\":1}}],[\"rm\",{\"1\":{\"44\":2}}],[\"r\",{\"1\":{\"44\":1}}],[\"rsa\",{\"1\":{\"44\":3}}],[\"request\",{\"1\":{\"48\":1}}],[\"release\",{\"1\":{\"45\":1}}],[\"reflog\",{\"1\":{\"44\":1}}],[\"refs\",{\"1\":{\"44\":1}}],[\"revert\",{\"1\":{\"44\":1}}],[\"renamed\",{\"1\":{\"44\":1}}],[\"remote\",{\"1\":{\"44\":17}}],[\"read\",{\"1\":{\"38\":1}}],[\"reset\",{\"1\":{\"44\":5}}],[\"restart\",{\"1\":{\"26\":1}}],[\"resource\",{\"1\":{\"19\":1}}],[\"repos\",{\"1\":{\"24\":1}}],[\"repo\",{\"1\":{\"24\":5}}],[\"run\",{\"1\":{\"20\":1}}],[\"root\",{\"0\":{\"12\":1},\"1\":{\"3\":1,\"6\":1,\"12\":1,\"13\":1}}],[\"url\",{\"1\":{\"44\":3}}],[\"uname\",{\"1\":{\"38\":1}}],[\"unix\",{\"1\":{\"19\":2}}],[\"upstream\",{\"1\":{\"44\":1}}],[\"upstart\",{\"1\":{\"21\":1}}],[\"up\",{\"1\":{\"37\":1}}],[\"uuid=ac9b66bf\",{\"1\":{\"23\":1}}],[\"user2\",{\"1\":{\"44\":3}}],[\"user1\",{\"1\":{\"44\":3}}],[\"useradd\",{\"1\":{\"38\":1}}],[\"users\",{\"1\":{\"38\":2,\"44\":2}}],[\"user\",{\"1\":{\"19\":1,\"44\":6}}],[\"usr\",{\"0\":{\"19\":1},\"1\":{\"19\":2,\"20\":1,\"30\":3}}],[\"其\",{\"1\":{\"44\":1}}],[\"其实\",{\"1\":{\"19\":1}}],[\"其他用户最多只能用来\",{\"1\":{\"13\":1}}],[\"很多小白都会误以为\",{\"1\":{\"19\":1}}],[\"主要也是记录与内核相关的信息\",{\"1\":{\"18\":1}}],[\"主要有\",{\"1\":{\"3\":1}}],[\"非常类似\",{\"1\":{\"18\":1}}],[\"进程\",{\"1\":{\"17\":1}}],[\"例如系统内核\",{\"1\":{\"17\":1}}],[\"例如人员的账号密码文件\",{\"1\":{\"6\":1}}],[\"它放置的数据都是在内存当中\",{\"1\":{\"17\":1}}],[\"虚拟文件系统目录\",{\"0\":{\"17\":1,\"18\":1}}],[\"目的相当于文件系统发生错误时\",{\"1\":{\"16\":1}}],[\"目录下的数据全部删除\",{\"1\":{\"15\":1}}],[\"email\",{\"1\":{\"44\":2}}],[\"esac\",{\"1\":{\"40\":1}}],[\"enter\",{\"1\":{\"38\":1}}],[\"ens33\",{\"1\":{\"23\":1}}],[\"else\",{\"1\":{\"37\":1,\"38\":2}}],[\"eq\",{\"1\":{\"37\":1,\"38\":1}}],[\"exists\",{\"1\":{\"38\":1}}],[\"exist\",{\"1\":{\"34\":1}}],[\"ext3\",{\"1\":{\"16\":1}}],[\"ext2\",{\"1\":{\"16\":1}}],[\"e\",{\"1\":{\"34\":1,\"37\":1}}],[\"echo\",{\"1\":{\"30\":1,\"33\":2,\"34\":1,\"37\":2,\"38\":4,\"39\":1,\"40\":1}}],[\"ethernet\",{\"1\":{\"23\":1}}],[\"etc\",{\"0\":{\"6\":1},\"1\":{\"6\":3,\"23\":1,\"24\":1,\"26\":1,\"30\":1,\"33\":2}}],[\"lock\",{\"1\":{\"20\":1}}],[\"log\",{\"1\":{\"20\":1,\"44\":8}}],[\"lost+found\",{\"0\":{\"16\":1}}],[\"list\",{\"1\":{\"44\":1}}],[\"lib\",{\"0\":{\"8\":1},\"1\":{\"8\":1}}],[\"linux命令\",{\"0\":{\"27\":1}}],[\"linux环境配置\",{\"0\":{\"22\":1}}],[\"linux系统管理程序\",{\"0\":{\"21\":1}}],[\"linux\",{\"0\":{\"52\":1},\"1\":{\"4\":1,\"5\":1,\"13\":1}}],[\"linux目录\",{\"0\":{\"1\":1}}],[\"当\",{\"1\":{\"45\":1}}],[\"当我们把文件放到本地仓库的时候就可以对远程仓库做推送\",{\"1\":{\"44\":1}}],[\"当我们把本地的仓库配置好之后\",{\"1\":{\"44\":1}}],[\"当我们的本地仓库和远程仓库建立好关联之后\",{\"1\":{\"44\":1}}],[\"当然\",{\"1\":{\"15\":1}}],[\"当需要卸载第三方应用程序时\",{\"1\":{\"11\":1}}],[\"临时文件存放目录\",{\"0\":{\"15\":1}}],[\"tagname\",{\"1\":{\"44\":1}}],[\"tags\",{\"1\":{\"44\":2}}],[\"tag\",{\"1\":{\"44\":12}}],[\"track\",{\"1\":{\"44\":1}}],[\"true\",{\"1\":{\"39\":1}}],[\"t\",{\"1\":{\"44\":1}}],[\"txt\",{\"1\":{\"38\":1}}],[\"the\",{\"1\":{\"38\":1}}],[\"then\",{\"1\":{\"37\":2,\"38\":2}}],[\"tcsh\",{\"1\":{\"30\":1}}],[\"telnet\",{\"1\":{\"25\":1}}],[\"tools\",{\"1\":{\"25\":1}}],[\"type=ethernet\",{\"1\":{\"23\":1}}],[\"tmp\",{\"0\":{\"15\":1},\"1\":{\"15\":1}}],[\"tty\",{\"1\":{\"5\":1}}],[\"里\",{\"1\":{\"14\":1}}],[\"里面包括了开机\",{\"1\":{\"13\":1}}],[\"服务需要的网页数据就可以放置在\",{\"1\":{\"14\":1}}],[\"服务数据存放目录\",{\"0\":{\"14\":1}}],[\"举例来说\",{\"1\":{\"14\":1}}],[\"放在\",{\"1\":{\"13\":1}}],[\"放置的则是在开机时会用到的函数库\",{\"1\":{\"8\":1}}],[\"放置的是在单用户维护模式下还能被操作的命令\",{\"1\":{\"3\":1}}],[\"才能够利用来\",{\"1\":{\"13\":1}}],[\"才能够顺利完成程序的执行之意\",{\"1\":{\"8\":1}}],[\"有两个选择\",{\"1\":{\"44\":1}}],[\"有非常多的命令是来设置系统环境的\",{\"1\":{\"13\":1}}],[\"有权利修改\",{\"1\":{\"6\":1}}],[\"所放置的目录\",{\"1\":{\"19\":1}}],[\"所以写这篇文章梳理git的使用的整理流程\",{\"1\":{\"43\":1}}],[\"所以本身并不占任何硬盘空间\",{\"1\":{\"17\":1}}],[\"所以你需要定期清理一下\",{\"1\":{\"15\":1}}],[\"所以我们会希望root的主文件夹与根目录放置在同一个分区中\",{\"1\":{\"12\":1}}],[\"所在分区应该越小越好\",{\"1\":{\"2\":1}}],[\"之所以放在这里\",{\"1\":{\"12\":1}}],[\"之后\",{\"1\":{\"10\":1}}],[\"的缩写\",{\"1\":{\"14\":1,\"19\":2}}],[\"的主文件夹\",{\"1\":{\"12\":1}}],[\"的英文\",{\"1\":{\"9\":1}}],[\"管理员主文件夹\",{\"0\":{\"12\":1}}],[\"第三方软件安装目录\",{\"0\":{\"11\":1}}],[\"只是有了\",{\"1\":{\"10\":1}}],[\"相同\",{\"1\":{\"10\":1}}],[\"一般建议你可以放置到这个目录中\",{\"1\":{\"10\":1}}],[\"一般来说\",{\"1\":{\"6\":1}}],[\"如果代码没有任何新变化\",{\"1\":{\"44\":1}}],[\"如果希望多个仓库对应不同的账户\",{\"1\":{\"44\":1}}],[\"如果\",{\"1\":{\"20\":1}}],[\"如果你想要暂时挂载某些额外的设备\",{\"1\":{\"10\":1}}],[\"如此不但性能较好\",{\"1\":{\"2\":1}}],[\"额外设备暂挂区\",{\"0\":{\"10\":1}}],[\"flow\",{\"1\":{\"45\":2}}],[\"floppy\",{\"1\":{\"9\":1}}],[\"found\",{\"1\":{\"50\":1}}],[\"follow\",{\"1\":{\"44\":1}}],[\"force\",{\"1\":{\"44\":2}}],[\"for\",{\"0\":{\"38\":1},\"1\":{\"38\":1}}],[\"feature\",{\"1\":{\"44\":1,\"45\":1}}],[\"fetch\",{\"1\":{\"44\":2}}],[\"first\",{\"1\":{\"44\":1}}],[\"fi\",{\"1\":{\"37\":2,\"38\":2}}],[\"filename\",{\"1\":{\"44\":1}}],[\"file2\",{\"1\":{\"44\":4}}],[\"file1\",{\"1\":{\"44\":4}}],[\"file\",{\"1\":{\"20\":3,\"44\":11}}],[\"filesystem\",{\"1\":{\"17\":1}}],[\"f\",{\"1\":{\"33\":1}}],[\"fstab\",{\"1\":{\"33\":2}}],[\"fatal=no\",{\"1\":{\"23\":2}}],[\"failure\",{\"1\":{\"23\":2,\"38\":1}}],[\"ftp\",{\"1\":{\"14\":1}}],[\"fhs\",{\"1\":{\"2\":1,\"19\":1}}],[\"光盘\",{\"1\":{\"9\":1}}],[\"顾名思义\",{\"1\":{\"9\":1}}],[\"媒体\",{\"1\":{\"9\":1}}],[\"媒体设备暂挂区\",{\"0\":{\"9\":1}}],[\"是安装时会占用较大硬盘容量的目录\",{\"1\":{\"20\":1}}],[\"是一些网络服务启动之后\",{\"1\":{\"14\":1}}],[\"是因为如果进入单用户维护模式而仅挂载根目录时\",{\"1\":{\"12\":1}}],[\"是\",{\"1\":{\"9\":1,\"19\":2}}],[\"外部设备以及网络状态等\",{\"1\":{\"17\":1}}],[\"外挂\",{\"1\":{\"8\":2}}],[\"外核\",{\"0\":{\"0\":1}}],[\"你好\",{\"0\":{\"42\":1}}],[\"你可以把函数库想象成是\",{\"1\":{\"8\":1}}],[\"你只要通过访问这个目录下面的某个文件\",{\"1\":{\"5\":1}}],[\"svn\",{\"0\":{\"49\":1}}],[\"sn\",{\"1\":{\"44\":1}}],[\"s\",{\"1\":{\"44\":2}}],[\"second\",{\"1\":{\"44\":1}}],[\"set\",{\"1\":{\"44\":1}}],[\"service\",{\"1\":{\"14\":1}}],[\"success\",{\"1\":{\"38\":1}}],[\"stat\",{\"1\":{\"44\":1}}],[\"status\",{\"1\":{\"44\":1}}],[\"static\",{\"1\":{\"23\":1}}],[\"stash\",{\"1\":{\"44\":2}}],[\"stdin\",{\"1\":{\"38\":1}}],[\"shortstat\",{\"1\":{\"44\":1}}],[\"shortlog\",{\"1\":{\"44\":1}}],[\"shortname\",{\"1\":{\"44\":8}}],[\"show\",{\"1\":{\"44\":6}}],[\"sh\",{\"1\":{\"30\":2}}],[\"shell的预定义变量\",{\"0\":{\"32\":1}}],[\"shells\",{\"1\":{\"30\":1}}],[\"shell脚本的解释器\",{\"0\":{\"30\":1}}],[\"shell脚本本质上是一组命令\",{\"1\":{\"29\":1}}],[\"shell脚本\",{\"0\":{\"29\":1}}],[\"ssh文件夹下配置config\",{\"1\":{\"44\":1}}],[\"sshd\",{\"1\":{\"26\":2}}],[\"ssh\",{\"1\":{\"26\":1,\"44\":3}}],[\"scripts\",{\"1\":{\"23\":1}}],[\"software\",{\"1\":{\"19\":1}}],[\"systemctl\",{\"1\":{\"26\":1}}],[\"systemd\",{\"1\":{\"21\":1}}],[\"sysvinit\",{\"1\":{\"21\":1}}],[\"sys\",{\"0\":{\"18\":1}}],[\"sysconfig\",{\"1\":{\"6\":1,\"23\":1}}],[\"srv\",{\"0\":{\"14\":1},\"1\":{\"14\":2}}],[\"sbin\",{\"0\":{\"13\":1},\"1\":{\"8\":1,\"13\":1,\"30\":1}}],[\"或者例如mysql数据库的文件等\",{\"1\":{\"20\":1}}],[\"或\",{\"1\":{\"8\":1}}],[\"而不要自行新建该软件的独立目录\",{\"1\":{\"19\":1}}],[\"而不是用户的数据\",{\"1\":{\"19\":1}}],[\"而不影响系统其它任何设置\",{\"1\":{\"11\":1}}],[\"而已\",{\"1\":{\"13\":1}}],[\"而\",{\"1\":{\"8\":1}}],[\"代表当前用户的主文件夹\",{\"1\":{\"7\":1}}],[\"~\",{\"1\":{\"7\":1}}],[\"这样可以自动生成pull\",{\"1\":{\"48\":1}}],[\"这里特地查询了一下标签的作用和好处\",{\"1\":{\"44\":1}}],[\"这点需要注意\",{\"1\":{\"19\":1}}],[\"这是让一般用户或者是正在执行的程序暂时放置文件的地方\",{\"1\":{\"15\":1}}],[\"这是系统默认的用户主文件夹\",{\"1\":{\"7\":1}}],[\"这些服务所需要取用的数据目录\",{\"1\":{\"14\":1}}],[\"这些命令只有\",{\"1\":{\"13\":1}}],[\"这个\",{\"1\":{\"9\":1}}],[\"这个目录同样不占硬盘容量\",{\"1\":{\"18\":1}}],[\"这个目录其实跟\",{\"1\":{\"18\":1}}],[\"这个目录本身是一个虚拟文件系统\",{\"1\":{\"17\":1}}],[\"这个目录通常会在分区的最顶层存在\",{\"1\":{\"16\":1}}],[\"这个目录是使用标准的\",{\"1\":{\"16\":1}}],[\"这个目录是任何人都能够访问\",{\"1\":{\"15\":1}}],[\"这个目录是用于安装第三方应用程序的\",{\"1\":{\"11\":1}}],[\"这个目录就被用来暂时挂载用了\",{\"1\":{\"10\":1}}],[\"这个目录的用途与\",{\"1\":{\"10\":1}}],[\"这个目录下的各个文件属性是可以让一般用户查阅的\",{\"1\":{\"6\":1}}],[\"这个目录主要放置开机会使用到的文件\",{\"1\":{\"4\":1}}],[\"各种服务的起始文件等\",{\"1\":{\"6\":1}}],[\"等\",{\"1\":{\"5\":1,\"6\":1,\"9\":1,\"14\":1}}],[\"等常用的命令\",{\"1\":{\"3\":1}}],[\"比较重要的文件有\",{\"1\":{\"5\":1,\"6\":1}}],[\"比较特殊\",{\"1\":{\"3\":1}}],[\"任何设备与接口设备都是以文件的形式存在于这个目录当中的\",{\"1\":{\"5\":1}}],[\"驱动设备目录\",{\"0\":{\"5\":1}}],[\"day\",{\"1\":{\"44\":1}}],[\"date\",{\"1\":{\"3\":1}}],[\"diff\",{\"1\":{\"44\":5}}],[\"dir\",{\"1\":{\"44\":1}}],[\"dir=\",{\"1\":{\"37\":1}}],[\"directory\",{\"1\":{\"7\":1}}],[\"dr\",{\"1\":{\"44\":1}}],[\"done\",{\"1\":{\"38\":1,\"39\":1}}],[\"do\",{\"1\":{\"38\":1,\"39\":1}}],[\"down\",{\"1\":{\"37\":1}}],[\"dns2=114\",{\"1\":{\"23\":1}}],[\"dns1=8\",{\"1\":{\"23\":1}}],[\"delete\",{\"1\":{\"44\":1}}],[\"defroute=yes\",{\"1\":{\"23\":2}}],[\"develop的开发模式\",{\"1\":{\"48\":1}}],[\"develop上这些修改会以某种特别方式被合并到\",{\"1\":{\"45\":1}}],[\"develop\",{\"1\":{\"45\":2}}],[\"develop工作流模型\",{\"1\":{\"44\":1}}],[\"device=ens33\",{\"1\":{\"23\":1}}],[\"dev\",{\"0\":{\"5\":1},\"1\":{\"5\":3,\"34\":1,\"37\":1,\"38\":3}}],[\"dhcp协议\",{\"1\":{\"23\":1}}],[\"dhcp\",{\"1\":{\"23\":1}}],[\"dvd等设备都暂时挂载于此\",{\"1\":{\"9\":1}}],[\"d\",{\"1\":{\"6\":1,\"24\":1,\"33\":1,\"44\":2}}],[\"内核文件以及开机菜单与开机所需配置文件等\",{\"1\":{\"4\":1}}],[\"包括文件改名\",{\"1\":{\"44\":1}}],[\"包括子目录\",{\"1\":{\"44\":1}}],[\"包括程序文件\",{\"1\":{\"20\":1}}],[\"包括缓存\",{\"1\":{\"20\":1}}],[\"包括目前已加载的内核模块与内核检测到的硬件设备信息等\",{\"1\":{\"18\":1}}],[\"包括软盘\",{\"1\":{\"9\":1}}],[\"包括\",{\"1\":{\"4\":1}}],[\"blame\",{\"1\":{\"44\":1}}],[\"b\",{\"1\":{\"44\":2}}],[\"branch\",{\"1\":{\"44\":28,\"45\":3}}],[\"browser\",{\"1\":{\"23\":1}}],[\"bahs\",{\"1\":{\"30\":2}}],[\"bak\",{\"1\":{\"24\":1}}],[\"base\",{\"1\":{\"24\":3}}],[\"bash\",{\"1\":{\"3\":1,\"31\":1,\"37\":2,\"38\":1,\"39\":1,\"40\":1}}],[\"b89f\",{\"1\":{\"23\":1}}],[\"bootp协议\",{\"1\":{\"23\":1}}],[\"bootp\",{\"1\":{\"23\":1}}],[\"bootproto=static\",{\"1\":{\"23\":2}}],[\"boot\",{\"0\":{\"4\":1}}],[\"bin\",{\"0\":{\"3\":1},\"1\":{\"3\":3,\"8\":1,\"30\":7,\"31\":1,\"37\":2,\"38\":1,\"39\":1,\"40\":1}}],[\"master\",{\"1\":{\"45\":3}}],[\"makecache\",{\"1\":{\"24\":1}}],[\"m\",{\"1\":{\"44\":3}}],[\"mirrors\",{\"1\":{\"24\":1}}],[\"mode=stable\",{\"1\":{\"23\":1}}],[\"message\",{\"1\":{\"44\":3}}],[\"merge\",{\"1\":{\"44\":1}}],[\"method=none\",{\"1\":{\"23\":1}}],[\"media\",{\"0\":{\"9\":1},\"1\":{\"9\":4,\"10\":2,\"37\":1}}],[\"mnt\",{\"0\":{\"10\":1}}],[\"mkdir\",{\"1\":{\"3\":1,\"37\":1}}],[\"mv\",{\"1\":{\"3\":1,\"24\":1,\"44\":1}}],[\"clone\",{\"1\":{\"44\":1}}],[\"create\",{\"1\":{\"38\":2}}],[\"c\",{\"1\":{\"37\":1,\"44\":3}}],[\"csh\",{\"1\":{\"30\":1}}],[\"config文件配置\",{\"1\":{\"44\":1}}],[\"config\",{\"1\":{\"26\":1,\"44\":5}}],[\"computer\",{\"0\":{\"51\":1}}],[\"commit\",{\"1\":{\"44\":17}}],[\"com\",{\"1\":{\"24\":1,\"44\":7}}],[\"curl\",{\"1\":{\"24\":1}}],[\"centos\",{\"1\":{\"24\":4}}],[\"c66ff84c9571\",{\"1\":{\"23\":1}}],[\"cd\",{\"1\":{\"23\":1}}],[\"cdrom\",{\"1\":{\"9\":1,\"34\":1,\"37\":1}}],[\"case\",{\"0\":{\"40\":1},\"1\":{\"40\":1}}],[\"cached\",{\"1\":{\"44\":2}}],[\"cache\",{\"1\":{\"20\":1}}],[\"cat\",{\"1\":{\"3\":1,\"38\":1}}],[\"cp\",{\"1\":{\"3\":1}}],[\"cherry\",{\"1\":{\"44\":1}}],[\"checkout\",{\"1\":{\"44\":7}}],[\"chown\",{\"1\":{\"3\":1}}],[\"chmod\",{\"1\":{\"3\":1}}],[\"在我们把所有的仓库\",{\"1\":{\"44\":1}}],[\"在现有分支与指定的远程分支之间\",{\"1\":{\"44\":1}}],[\"在远程仓库中建立一个空仓库\",{\"1\":{\"44\":1}}],[\"在远程建立一个空的仓库\",{\"1\":{\"44\":1}}],[\"在本地也建一个空的仓库\",{\"1\":{\"44\":1}}],[\"在多账户的情况下需要管理好不同的key\",{\"1\":{\"44\":1}}],[\"在c盘的\",{\"1\":{\"44\":1}}],[\"在比较早的时候\",{\"1\":{\"10\":1}}],[\"在你创建一个一般用户账号时\",{\"1\":{\"7\":1}}],[\"在\",{\"1\":{\"3\":1,\"5\":1}}],[\"但保持暂存区和工作区不变\",{\"1\":{\"44\":1}}],[\"但工作区不变\",{\"1\":{\"44\":2}}],[\"但该文件会保留在工作区\",{\"1\":{\"44\":1}}],[\"但依然停留在当前分支\",{\"1\":{\"44\":1}}],[\"但是不适用所有场景\",{\"1\":{\"44\":1}}],[\"但只有\",{\"1\":{\"6\":1}}],[\"但\",{\"1\":{\"3\":1}}],[\"系统管理演变之路\",{\"1\":{\"21\":1}}],[\"系统管理员\",{\"1\":{\"12\":1}}],[\"系统软件资源目录\",{\"0\":{\"19\":1}}],[\"系统\",{\"1\":{\"13\":1}}],[\"系统的函数库非常多\",{\"1\":{\"8\":1}}],[\"系统函数库\",{\"0\":{\"8\":1}}],[\"系统主要的配置文件几乎都放置在这个目录内\",{\"1\":{\"6\":1}}],[\"系统上\",{\"1\":{\"5\":1}}],[\"系统有很多放置执行文件的目录\",{\"1\":{\"3\":1}}],[\"系统修复等操作有关\",{\"1\":{\"2\":1}}],[\"且应用程序所安装的软件最好不要与根目录放在同一个分区内\",{\"1\":{\"2\":1}}],[\"因为这个目录下的数据都是在内存当中的\",{\"1\":{\"17\":1}}],[\"因为系统会不定期将\",{\"1\":{\"15\":1}}],[\"因为\",{\"1\":{\"3\":1}}],[\"因为不但所有的目录都是由根目录衍生出来的\",{\"1\":{\"2\":1}}],[\"因此\",{\"1\":{\"2\":1}}],[\"还原系统所需要的命令\",{\"1\":{\"13\":1}}],[\"还原\",{\"1\":{\"2\":1}}]],\"version\":2}}")).map(([e,t])=>[e,mt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:n,options:o,id:s}})=>{const r=wt[n];e==="suggest"?self.postMessage([e,s,ze(t,r,o)]):e==="search"?self.postMessage([e,s,ve(t,r,o)]):self.postMessage({suggestions:[e,s,ze(t,r,o)],results:[e,s,ve(t,r,o)]})};
//# sourceMappingURL=index.js.map
